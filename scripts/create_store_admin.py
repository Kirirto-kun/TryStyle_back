#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é STORE_ADMIN.
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from src.database import get_db_session
from src.models.user import User, UserRole
from src.models.store import Store
from src.utils.auth import get_password_hash


def create_store_admin(
    email: str,
    username: str,
    password: str,
    store_id: int = None,
    store_name: str = None
):
    """
    –°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞
    
    Args:
        email: Email –∞–¥–º–∏–Ω–∞
        username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        password: –ü–∞—Ä–æ–ª—å
        store_id: ID –º–∞–≥–∞–∑–∏–Ω–∞ (–µ—Å–ª–∏ None, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π)
        store_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ (–¥–ª—è –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ store_id –Ω–µ —É–∫–∞–∑–∞–Ω)
    """
    db = None
    try:
        db = get_db_session()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = db.query(User).filter(
            (User.email == email) | (User.username == username)
        ).first()
        
        if existing_user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '{email}' –∏–ª–∏ username '{username}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return False
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω
        if store_id:
            store = db.query(Store).filter(Store.id == store_id).first()
            if not store:
                print(f"‚ùå –ú–∞–≥–∞–∑–∏–Ω —Å ID {store_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return False
        elif store_name:
            store = db.query(Store).filter(Store.name.ilike(f"%{store_name}%")).first()
            if not store:
                print(f"‚ùå –ú–∞–≥–∞–∑–∏–Ω —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{store_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return False
        else:
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
            store = db.query(Store).first()
            if not store:
                print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤!")
                return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∞ —É —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        existing_admin = db.query(User).filter(
            User.store_id == store.id,
            User.role == UserRole.STORE_ADMIN
        ).first()
        
        if existing_admin:
            print(f"‚ùå –ú–∞–≥–∞–∑–∏–Ω '{store.name}' —É–∂–µ –∏–º–µ–µ—Ç –∞–¥–º–∏–Ω–∞: {existing_admin.username} ({existing_admin.email})")
            return False
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
        hashed_password = get_password_hash(password)
        new_admin = User(
            email=email,
            username=username,
            hashed_password=hashed_password,
            role=UserRole.STORE_ADMIN,
            store_id=store.id,
            is_active=True
        )
        
        db.add(new_admin)
        db.commit()
        db.refresh(new_admin)
        
        print(f"‚úÖ –ê–¥–º–∏–Ω –º–∞–≥–∞–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} ({email})")
        print(f"   üè™ –ú–∞–≥–∞–∑–∏–Ω: {store.name} (ID: {store.id})")
        print(f"   üîë –ü–∞—Ä–æ–ª—å: {password}")
        print(f"   üéØ –†–æ–ª—å: {new_admin.role.value}")
        
        return True
        
    except Exception as e:
        if db:
            db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {str(e)}")
        return False
    finally:
        if db:
            db.close()


def list_stores():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤"""
    db = None
    try:
        db = get_db_session()
        stores = db.query(Store).all()
        
        if not stores:
            print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤!")
            return
        
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã:")
        print("-" * 60)
        for store in stores:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
            admin = db.query(User).filter(
                User.store_id == store.id,
                User.role == UserRole.STORE_ADMIN
            ).first()
            
            admin_info = f" (–ê–¥–º–∏–Ω: {admin.username})" if admin else " (–ë–µ–∑ –∞–¥–º–∏–Ω–∞)"
            print(f"   {store.id:2d}. {store.name} - {store.city}{admin_info}")
        print("-" * 60)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {str(e)}")
    finally:
        if db:
            db.close()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞"""
    print("üè™ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤
    list_stores()
    
    if len(sys.argv) > 1 and sys.argv[1] == "--interactive":
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        print("\nüîß –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞:")
        
        email = input("üìß Email: ").strip()
        username = input("üë§ Username: ").strip()
        password = input("üîë Password: ").strip()
        
        store_choice = input("üè™ ID –º–∞–≥–∞–∑–∏–Ω–∞ (–∏–ª–∏ Enter –¥–ª—è –∞–≤—Ç–æ–≤—ã–±–æ—Ä–∞): ").strip()
        store_id = int(store_choice) if store_choice.isdigit() else None
        
        if not all([email, username, password]):
            print("‚ùå –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
            return
        
        create_store_admin(email, username, password, store_id=store_id)
        
    else:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        print("\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞...")
        success = create_store_admin(
            email="admin@hm.kz",
            username="hm_admin",
            password="admin123",
            store_id=1  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –∏–º–µ–µ—Ç ID=1
        )
        
        if success:
            print(f"\nüöÄ –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
            print(f"   Email: admin@hm.kz")
            print(f"   Password: admin123")
            print(f"\nüìù –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
            print(f"   python scripts/create_store_admin.py --interactive")


if __name__ == "__main__":
    main() 