#!/usr/bin/env python3
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(os.path.dirname(__file__))

from src.database import get_db
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏
from src.models.product import Product
from src.models.store import Store  
from src.models.review import Review
from src.models.user import User
from src.models.chat import Chat, Message
from src.models.tryon import TryOn
from src.models.waitlist import WaitListItem
from src.models.clothing import ClothingItem

def delete_products_safely():
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    
    # ID —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ)
    product_ids = [28, 44, 32, 48, 33, 49, 39, 55, 31, 47, 27, 43]

    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –ë–î
    db_gen = get_db()
    db = next(db_gen)

    try:
        print('üóëÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞...\n')
        
        deleted_products = []
        deleted_reviews_count = 0
        
        for product_id in product_ids:
            # –ò—â–µ–º —Ç–æ–≤–∞—Ä
            product = db.query(Product).filter(Product.id == product_id).first()
            if not product:
                print(f'   ‚ö†Ô∏è  –¢–æ–≤–∞—Ä —Å ID={product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                continue
            
            product_name = product.name
            store_id = product.store_id
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∑—ã–≤—ã
            reviews = db.query(Review).filter(Review.product_id == product_id).all()
            reviews_count = len(reviews)
            
            print(f'   üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ID={product_id}, "{product_name}"')
            print(f'      –ú–∞–≥–∞–∑–∏–Ω: {store_id}, –û—Ç–∑—ã–≤–æ–≤: {reviews_count}')
            
            # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
            if reviews_count > 0:
                for review in reviews:
                    db.delete(review)
                    deleted_reviews_count += 1
                print(f'      ‚úÖ –£–¥–∞–ª–µ–Ω–æ {reviews_count} –æ—Ç–∑—ã–≤–æ–≤')
            
            # –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä
            db.delete(product)
            deleted_products.append({
                'id': product_id,
                'name': product_name,
                'store_id': store_id,
                'reviews_deleted': reviews_count
            })
            
            print(f'      ‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω\n')
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        
        print('üìä –°–≤–æ–¥–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:')
        print(f'   ‚Ä¢ –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(deleted_products)}')
        print(f'   ‚Ä¢ –£–¥–∞–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {deleted_reviews_count}')
        print('\nüìã –î–µ—Ç–∞–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:')
        
        for product in deleted_products:
            print(f'   ‚úÖ ID={product["id"]}: "{product["name"]}" (–æ—Ç–∑—ã–≤–æ–≤: {product["reviews_deleted"]})')
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–≥
        log_entry = f"""
## –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

**–û–ø–µ—Ä–∞—Ü–∏—è:** –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏ –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞

**–£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:** {len(deleted_products)}
**–£–¥–∞–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤:** {deleted_reviews_count}

**–°–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:**
"""
        for product in deleted_products:
            log_entry += f"- ID={product['id']}: \"{product['name']}\" (–º–∞–≥–∞–∑–∏–Ω: {product['store_id']}, –æ—Ç–∑—ã–≤–æ–≤: {product['reviews_deleted']})\n"
        
        log_entry += f"""
**–†–µ–∑—É–ª—å—Ç–∞—Ç:** ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω –∫–∞—Ç–∞–ª–æ–≥ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –ë–î —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.

"""
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ cursor-logs.md
        try:
            with open('cursor-logs.md', 'a', encoding='utf-8') as f:
                f.write(log_entry)
            print('\nüìù –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ cursor-logs.md')
        except Exception as e:
            print(f'\n‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥: {e}')
        
        print('\nüéâ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
        return deleted_products
        
    except Exception as e:
        print(f'\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤: {e}')
        db.rollback()
        raise
        
    finally:
        db.close()

if __name__ == "__main__":
    delete_products_safely() 