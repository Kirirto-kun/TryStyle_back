#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ features —Ç–æ–≤–∞—Ä–æ–≤
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.database import get_db_session
from src.models.product import Product
from src.models.store import Store
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ SQLAlchemy
from src.models.review import Review
from src.models.user import User
from src.models.clothing import ClothingItem
from src.models.chat import Chat, Message
from src.models.tryon import TryOn
from src.models.waitlist import WaitListItem

def main():
    """–ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä features."""
    try:
        print("üîç –ë–´–°–¢–†–´–ô –ê–ù–ê–õ–ò–ó FEATURES")
        print("=" * 60)
        
        db = get_db_session()
        products = db.query(Product).join(Store).order_by(Product.id).all()
        
        if not products:
            print("‚ùå –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç!")
            return
        
        print(f"üì¶ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º {len(products)} —Ç–æ–≤–∞—Ä–æ–≤:\n")
        
        for i, product in enumerate(products, 1):
            print(f"{i}. üìù {product.name}")
            print(f"   üí∞ ‚Ç∏{product.price:,.0f} | üìÇ {product.category}")
            
            if product.features:
                features_str = "', '".join(product.features)
                print(f"   üè∑Ô∏è  Features: ['{features_str}']")
            else:
                print("   ‚ùå –ù–µ—Ç features")
            print()
        
        # –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        all_features = []
        for product in products:
            if product.features:
                all_features.extend(product.features)
        
        if all_features:
            from collections import Counter
            feature_counts = Counter(all_features)
            print("üèÜ –¢–û–ü FEATURES:")
            for feature, count in feature_counts.most_common(5):
                print(f"   {count}x '{feature}'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 