#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö features –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.database import get_db_session
from src.models.product import Product
from src.models.store import Store
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ SQLAlchemy
from src.models.review import Review
from src.models.user import User
from src.models.clothing import ClothingItem
from src.models.chat import Chat, Message
from src.models.tryon import TryOn
from src.models.waitlist import WaitListItem

def main():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ –∏—Ö features."""
    try:
        print("üì¶ –í–°–ï –¢–û–í–ê–†–´ –ò –ò–• FEATURES")
        print("=" * 60)
        
        db = get_db_session()
        products = db.query(Product).join(Store).order_by(Product.id).all()
        
        if not products:
            print("‚ùå –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç!")
            return
        
        print(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}\n")
        
        for i, product in enumerate(products, 1):
            print(f"{i}. {product.name}")
            print(f"   –¶–µ–Ω–∞: ‚Ç∏{product.price:,.0f}")
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category}")
            print(f"   –ú–∞–≥–∞–∑–∏–Ω: {product.store.name}")
            
            if product.features:
                print(f"   Features: {product.features}")
            else:
                print("   Features: –ù–ï–¢")
            print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        if 'db' in locals():
            db.close()

if __name__ == "__main__":
    main() 